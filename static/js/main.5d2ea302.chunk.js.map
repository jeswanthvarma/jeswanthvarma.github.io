{"version":3,"sources":["assets/images/doug.jpg","redux/time.js","views/Home.js","views/About.js","components/Timeline/Timeline.js","redux/user.js","containers/App.js","redux/reducers.js","redux/configureStore.js","containers/Root.js","serviceWorker.js","index.js"],"names":["module","exports","timeInit","currentTime","Date","toString","host","connect","state","currentT","time","dispatch","updateT","timezone","type","payload","meta","url","fetchNewTime","props","onClick","to","About","SearchForm","searchValue","updateSearchValue","e","setState","target","value","subitForm","preventDefault","onSubmit","searchClasses","this","showSearch","push","className","join","onChange","placeholder","React","Component","defaultProps","searchVisible","Header","style","background","backgroundColor","color","title","Post","post","alt","user","name","src","image","text","comments","length","Content","posts","searchContent","stext","console","log","regex","RegExp","postsfil","filter","matched","match","map","key","Timeline","loggedIn","dpimage","userInit","loginInit","getUser","loginUser","username","document","getElementById","userLogin","logoutUser","position","top","right","cursor","textDecoration","id","path","component","render","rootReducer","combineReducers","action","initialState","logMiddleware","store","next","apiMiddleware","fetch","then","response","json","data","newAction","Object","assign","datetime","configureStore","createStore","applyMiddleware","Root","Boolean","window","location","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d2ea302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doug.f0d451a1.jpg\";","export const timeInit = {\n\tcurrentTime: new Date().toString()\n};\n\nconst host = 'http://worldtimeapi.org/api/timezone';\n\nexport const fetchNewTime = (timezone = 'Asia/Kolkata', str='now') => {\n\treturn{\n\t\ttype: 'FETCH_NEW_TIME',\n\t\tpayload: new Date().toString(),\n\t\tmeta: {\n\t\t\ttype: 'api',\n\t\t\turl: host+'/'+timezone\n\t\t}\n\t}\n};\n\n\nexport const timeReducer = (state = timeInit, action) => {\n\tswitch (action.type){\n\t\tcase 'FETCH_NEW_TIME':\n\t\t\treturn {...state,currentTime: action.payload};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fetchNewTime} from '../redux/time';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcurrentT: state.time.currentTime\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateT: () => dispatch(fetchNewTime())\n\t}\n}\n\nconst Home = (props) => {\n\treturn (<div>\n\t\t<h1>Home page</h1>\n\t\t<p>Current Time {props.currentT}</p>\n\t\t<button onClick={props.updateT}>Update</button><br/>\n\t\t<Link to=\"/about\">About us</Link>\n\t\t</div>);\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst About = () => {\n\treturn (<div>\n\t\t<h1>About us</h1>\n\t\t<p>Something about us...</p>\n\t\t<Link to=\"/\">Back to Home</Link>\n\t</div>);\n}\n\nexport default About;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../../assets/css/timeline.css';\nimport '../../assets/css/font-awesome.min.css';\nimport dpimage from '../../assets/images/doug.jpg';\n\nclass SearchForm extends React.Component{\n\tstate = {searchValue:''}\n\tupdateSearchValue = (e) => {\n\t\tthis.setState({searchValue:e.target.value});\n\t}\n\n\tsubitForm = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmit(this.state.searchValue);\n\t}\n\trender(){\n\t\tlet searchClasses = ['searchInput'];\n\t\tif(this.props.showSearch)\n\t\t\tsearchClasses.push('active');\n\n\t\treturn (\n\t\t<form onSubmit={this.subitForm}>\n\t        <input type=\"text\" className={searchClasses.join(' ')} onChange={this.updateSearchValue} placeholder=\"Search ...\" />\n\t    </form>\n\t\t);\n\t}\n}\n\nSearchForm.propTypes = {\n\tsearchVisible: PropTypes.bool,\n\tonSubmit: PropTypes.func\n}\n\nSearchForm.defaultProps = {\n\tsearchVisible: false,\n\tonSubmit: () => {}\n}\n\nclass Header extends React.Component{\n\tstate = {showSearch:false};\n\tshowSearch = () => this.setState({showSearch:!this.state.showSearch});\n\n\trender(){\n\t\treturn (\n\t\t<div className=\"header\" style={{background:'rgba(251, 202, 43, 1)'}}>\n\t        <div className=\"menuIcon\">\n\t          <div className=\"dashTop\" style={{backgroundColor:'#333333'}}></div>\n\t          <div className=\"dashBottom\" style={{backgroundColor:'#333333'}}></div>\n\t          <div className=\"circle\" style={{backgroundColor:'#333333'}}></div>\n\t        </div>\n\t        <span className=\"title\" style={{color:'#333333'}}>{this.props.title}</span>\n\n\t        <SearchForm showSearch={this.state.showSearch} onSubmit={this.props.onSubmit}/>\n\n\t        <div className=\"fa fa-search searchIcon\" onClick={this.showSearch} style={{color:'#333333'}}></div>\n\t    </div>\n\t\t);\n\t}\n}\n\nclass Post extends React.Component{\n\trender(){\n\t\tlet {post} = this.props;\n\t\treturn (\n\t\t\t<div className=\"item\">\n\t\t\t  <div className=\"avatar\">\n\t\t\t    <img\n\t\t\t      alt={post.user.name}\n\t\t\t      src={post.user.image}\n\t\t\t    />\n\t\t\t    {post.user.name}\n\t\t\t  </div>\n\n\t\t\t  <span className=\"time\">{post.time}</span>\n\t\t\t  <p>{post.text}</p>\n\t\t\t  <div className=\"commentCount\">{post.comments.length}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Content extends React.Component{\n\tstate = {posts: this.props.posts}\n\tsearchContent = (stext) => {\n\t\tconsole.log('Searched...',stext);\n\t\tlet regex = new RegExp(stext,'i');\n\t\tlet {posts} = this.props;\n\t\tlet postsfil = posts.filter(function(post){\n\t\t\tlet matched = false;\n\t\t\tif(post.user.name.match(regex) || post.text.match(regex))\n\t\t\t\tmatched = true;\n\t\t\treturn matched;\n\t\t});\n\t\tthis.setState({posts: postsfil});\n\t}\n\trender(){\n\t\tlet {posts} = this.state;\n\t\treturn (\n\t\t<div>\n\t\t\t<Header title=\"Timeline\" onSubmit={this.searchContent}/>\n\t\t\t<div className=\"content\">\n\t\t        <div className=\"line\"></div>\n\n\t\t\t{posts.map(function(post,key){\n\t\t\t\treturn (\n\t\t\t        <Post key={key} post={post} />\n\t\t\t\t);\n\t\t\t})}\n\t\t\t</div>\n\t    </div>\n\t\t);\n\t}\n}\n\nclass Timeline extends React.Component{\n\trender(){\n\t\tif(!this.props.loggedIn)\n\t\t\treturn (<Redirect to=\"/\" />);\n\t\tconst posts = [\n\t\t\t{\n\t\t\t\t'time': 'an hour ago',\n\t\t\t\t'text': 'Just woke up!!',\n\t\t\t\t'user': {\n\t\t\t\t\t'image': dpimage,\n\t\t\t\t\t'name': 'Jeswanth'\n\t\t\t\t},\n\t\t\t\t'comments': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'Who cares :p'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'Me too...'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'time': '15 mins ago',\n\t\t\t\t'text': 'Just touched down in Goa, ooohoooo...',\n\t\t\t\t'user': {\n\t\t\t\t\t'image': dpimage,\n\t\t\t\t\t'name': 'Varma'\n\t\t\t\t},\n\t\t\t\t'comments': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'Wounderfullllll...'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'So jealous.'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'I missed it'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'Have a happy trip.'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t'time': 'now',\n\t\t\t\t'text': 'Ate breakfast',\n\t\t\t\t'user': {\n\t\t\t\t\t'image': dpimage,\n\t\t\t\t\t'name': 'Jeswanth'\n\t\t\t\t},\n\t\t\t\t'comments': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'text': 'So early!!!'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\t\treturn(\n\t\t\t<div className=\"notificationsFrame\">\n\t\t        <div className=\"panel\">\n\t\t        \t<Content posts={posts} />\n\t\t        </div>\n\t\t    </div>\n\t\t);\n\t}\n}\n\nexport default Timeline;","export const userInit ={\n\tuser: {},\n\tloggedIn: false\n}\n\nexport const userLogin = (username) => {\n\treturn {\n\t\ttype: 'LOGIN',\n\t\tpayload: {name: username}\n\t}\n}\n\nexport const userLogout = () => {\n\treturn {\n\t\ttype: 'LOGOUT'\n\t}\n}\n\nexport const userReducer = (state = userInit, action) => {\n\tswitch (action.type){\n\t\tcase 'LOGIN':\n\t\t\treturn {...state, user: action.payload, loggedIn: true};\n\t\tcase 'LOGOUT':\n\t\t\treturn userInit;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport Home from '../views/Home';\nimport About from '../views/About';\nimport Timeline from '../components/Timeline/Timeline';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {userLogin, userLogout} from '../redux/user';\nimport '../assets/css/timeline.css';\nimport '../assets/css/font-awesome.min.css';\n\nconst userState = (state) => ({\n\tgetUser: state.user.user,\n\tloggedIn: state.user.loggedIn\n});\nlet loginInit = false;\nconst changeUserState = (dispatch) => {\n\treturn {\n\t\t\tloginUser: () =>{\n\t\t\t\tlet username = document.getElementById('username').value;\n\t\t\t\tdispatch(userLogin(username));\n\t\t\t\tloginInit = true;\n\t\t\t},\n\t\t\tlogoutUser: () => dispatch(userLogout()),\n\t\t}\n};\n\nconst App = (props) => {\n\tlet username,user;\n\tif(props.loggedIn){\n\t\tusername = <span className=\"user\">{props.getUser.name}</span>;\n\t\tuser = (<div style={{position:'absolute',top:'25px',right:'20px'}}>\n\t\t\t<a className=\"logout\" onClick={props.logoutUser} style={{cursor:'pointer',textDecoration:'underline'}}>Logout</a>\n\t\t\t<p><Link to=\"/timeline\"><i className=\"fa fa-bars\"></i> Timeline</Link></p>\n\t\t\t</div>);\n\t}else{\n\t\tuser = <div style={{position:'absolute',top:'25px',right:'20px'}}><input type=\"text\" id=\"username\"/><button onClick={props.loginUser} id=\"user_login\">Login</button></div>;\n\t}\n\t\n\treturn (\n\t\t<div>\n\t\t\t<h1>Welcome {username}</h1>\n\t\t\t<Router>\n\t\t\t{user}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/about\" component={About}/>\n\t\t\t\t\t<Route path=\"/timeline\" render= {() => (\n\t\t\t\t\t\t<div className=\"demo\">\n\t\t\t\t\t\t\t<Timeline loggedIn={props.loggedIn}/>\n\t\t\t\t\t\t\t<Link to=\"/\"><i className=\"fa fa-arrow-left\"></i> Home</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}/>\n\t\t\t\t\t<Route path=\"*\" component={() => {\n\t\t\t\t\t\tif(loginInit){\n\t\t\t\t\t\t\tloginInit = false;\n\t\t\t\t\t\t\treturn (<Redirect to=\"/timeline\" />);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\treturn <Home/>\n\t\t\t\t\t}}/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t\t);\n}\n\nexport default connect(userState,changeUserState)(App);","import {combineReducers} from 'redux';\nimport {timeInit,timeReducer} from './time.js';\nimport {userInit,userReducer} from './user.js';\n\nexport const rootReducer = combineReducers({time: timeReducer, user: userReducer});\n\nexport const initialState = {time: timeInit, user: userInit};","import {createStore, applyMiddleware} from 'redux';\nimport {rootReducer, initialState} from './reducers';\n\nconst logMiddleware = (store) => (next) => (action) => {\n\tconsole.log('middleware:',next, action);\n\t\tnext(action);\n}\n\nconst apiMiddleware = (store) => (next) => (action) => {\n\tconsole.log('api middleware:',next, action);\n\tif(!action.meta || !action.meta.type=='api')\n\t\treturn next(action);\n\n\tfetch(action.meta.url).then(response=>response.json()).then(data=>{\n\t\tlet newAction = Object.assign(action,{payload: data.datetime});\n\t\tdelete newAction.meta;\n\t\tnext(newAction);\n\t})\n}\n\nconst configureStore = () => {\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tapplyMiddleware(apiMiddleware,logMiddleware)\n\t\t);\n\treturn store;\n}\n\nexport default configureStore;","import React from 'react';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport configureStore from '../redux/configureStore'\n\nconst Root = () => {\n\tconst store = configureStore();\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t\t);\n}\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './containers/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}